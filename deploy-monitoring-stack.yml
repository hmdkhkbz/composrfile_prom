version: '3.7'

services:

  prometheus:
    image: prom/prometheus:v2.28.1
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alerting_rules.yml:/etc/prometheus/alerting_rules.yml   
      - prometheus-data:/prometheus
    networks:
      - monitor-net
    environment:
      - "TZ=UTC"
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        order: start-first
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == swarm
      resources:
        limits:
          cpus: '2'
          memory: 500M

  node-exporter:
    image: prom/node-exporter:v1.2.2
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
    networks:
      - monitor-net
    environment:
      - "TZ=UTC"
    deploy:
      mode: global
      update_config:
        order: start-first
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '1'
          memory: 100M

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitor-net
    environment:
      - "TZ=UTC"
    deploy:
      mode: global
      update_config:
        order: start-first
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '1'
          memory: 150M

  alertmanager:
    image: prom/alertmanager:v0.23.0
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager-data:/alertmanager
    networks:
      - monitor-net
    environment:
      - "TZ=UTC"
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        order: start-first
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == swarm
      resources:
        limits:
          cpus: '1'
          memory: 200M

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini
    networks:
      - monitor-net
    environment:
      - "TZ=UTC"
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        order: start-first
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '1'
          memory: 500M

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/nginx/certs
    networks:
      - monitor-net
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

  certbot:
    image: certbot/certbot
    volumes:
      - ./certs:/etc/letsencrypt/live
      - ./certs-data:/data/letsencrypt
    command: certonly --webroot --webroot-path=/data/letsencrypt -d prometheus.hmdkh.ir,grafana.hmdkh.ir --email hmdkhkbzz@hmdkh.ir --agree-tos --no-eff-email

networks:
  monitor-net:
    driver: overlay

volumes:
  prometheus-data:
    external: true
  alertmanager-data:
    external: true
  grafana-data:
    external: false
  certs:
    external: false
  certs-data:
    external: false
